<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:ignoredWords="System.Windows.Forms.Control;HelpSystemCSHID;MyTextBox;TextBox;myTextBox;myTextBox.Tag;TestID1" MadCap:conditions="Products.Flare" MadCap:lastBlockDepth="8" MadCap:lastHeight="1212" MadCap:lastWidth="1109">
    <head>
        <link href="../../Resources/TableStyles/BasicAlternateRows.css" rel="stylesheet" MadCap:stylesheetType="table" /><title></title>
        <link href="../../Resources/Stylesheets/styles.css" rel="stylesheet" type="text/css" />
        <meta name="description" content="Providing F1 Help with MadCap Flare, enabling System.Windows.Forms for CSH, getting the CSH ID, and delivering context-sensitive help." />
    </head>
    <body>
        <h1>
            <MadCap:concept term="FilterCSH" />
            <MadCap:concept term="CSHCallsDNH" />
            <MadCap:keyword term="ICSHIDProvider;API:ICSHIDProvider" />
            <MadCap:keyword term="DotNet Help:connecting to application;DotNet Help:distributing" />
            <MadCap:keyword term="Output:DotNet Help;Context-sensitive Help:DotNet Help;DotNet Help:context-sensitive Help" />ICSHIDProvider API</h1>
        <MadCap:snippetBlock src="../../Resources/Snippets/InformationForDevelopers.flsnp" />
        <p>The ICSHIDProvider API is used to enable a System.Windows.Forms.Control to be a <MadCap:keyword term="Context-sensitive Help" />context-sensitive Help (CSH) ID provider. This is required to incorporate any of the following.</p>
        <ul>
            <li><span class="SetOffFirstLevel"><MadCap:keyword term="Dynamic Help window" />Dynamic Help</span> This is a feature where a Help window automatically displays topics from a Help system that are relevant to the context as an individual uses an application. For example, if the user clicks on an area of your UI called "Project Organizer," the topic pertinent to the Project Organizer opens. You can see an example of Dynamic Help in Flare's online Help (select <span class="Emphasis">Help&gt;Dynamic Help</span>).</li>
            <li><span class="SetOffFirstLevel"><MadCap:keyword term="F1 Help" />F1 Help</span> This is a feature where the Help opens when a user presses the F1 key.</li>
            <li><span class="SetOffFirstLevel">Dialog's Help Button</span> This is a feature where the Help opens when a user clicks the dialog's Help button (i.e., the "question mark" button). </li>
        </ul>
        <p>If your application uses any of these features, the DotNet CSH engine uses this interface to determine the desired topic to display. As an alternative to implementing this interface, you may also set the control's <span class="Emphasis">Tag</span> property to the desired CSH ID string. In this case, you must prefix the string with "CSH:" </p>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot MadCap:conditions="General.OnlineLive">example</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <p class="ExampleHead">example</p>
                <p class="Example">For example, if your CSH ID is "MyHelpTopic," you would set the Tag object to the string "CSH:MyHelpTopic"</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot MadCap:conditions="General.OnlineLive">table</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/BasicAlternateRows.css');" cellspacing="0" class="TableStyle-Basic">
                    <col class="TableStyle-Basic-Column-Regular" />
                    <col class="TableStyle-Basic-Column-Regular" />
                    <thead>
                        <tr class="TableStyle-Basic-Head-Header1">
                            <th class="TableStyle-Basic-HeadE-Regular-Header1">
                                <p class="TableTextHead">Name</p>
                            </th>
                            <th class="TableStyle-Basic-HeadD-Regular-Header1">
                                <p class="TableTextHead">Description</p>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr class="TableStyle-Basic-Body-Row1">
                            <td class="TableStyle-Basic-BodyB-Regular-Row1">
                                <p class="TableTextEmphasis"><span class="TableCodeBlue">public string </span><span class="TableCodeBlue">HelpSystemCSHID</span>
                                </p>
                            </td>
                            <td class="TableStyle-Basic-BodyA-Regular-Row1">Gets the CSH ID of the topic that should be displayed in the Help system.</td>
                        </tr>
                    </tbody>
                </table>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <MadCap:snippetBlock src="../../Resources/Snippets/EmptyPageBreakAfter.flsnp" MadCap:conditions="FlareGuides.FlareDNHGuide,FlareGuides.FlareCSHGuide" />
        <MadCap:dropDown>
            <MadCap:dropDownHead>
                <MadCap:dropDownHotspot MadCap:conditions="General.OnlineLive">examples</MadCap:dropDownHotspot>
            </MadCap:dropDownHead>
            <MadCap:dropDownBody class="Final">
                <p>The following shows how to implement the ICSHIDProvider interface.</p>
                <p class="Example2">public class MyTextBox : TextBox, ICSHIDProvider</p>
                <p class="ExampleCode3">{</p>
                <p class="ExampleCode3"> private string mHelpSystemCSHID = "TestID1";</p>
                <p class="ExampleCode3"> public string HelpSystemCSHID</p>
                <p class="ExampleCode3"> {</p>
                <p class="ExampleCode3"> get { return mHelpSystemCSHID; } }</p>
                <p class="ExampleCode3"> ...</p>
                <p class="ExampleCode2Indented">}</p>
                <p>The following shows how to set the Tag object.</p>
                <p class="Example2">TextBox myTextBox = new TextBox();</p>
                <p class="ExampleCode2">myTextBox.Tag = "CSH:TestID1";</p>
            </MadCap:dropDownBody>
        </MadCap:dropDown>
        <p MadCap:conditions="General.OnlineLive">
            <MadCap:conceptLink term="CSHCallsDNH" />
        </p>
        <MadCap:snippetBlock src="../../Resources/Snippets/EmptyPageBreakAfter.flsnp" MadCap:conditions="FlareGuides.FlareCSHGuide" />
    </body>
</html>