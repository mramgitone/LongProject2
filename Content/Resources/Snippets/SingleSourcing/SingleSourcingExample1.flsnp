<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="165" MadCap:lastWidth="1132" MadCap:conditions="Products.Analyzer,Products.Flare">
    <body>
        <p>One way to single-source content is to take advantage of multiple output formats and condition tags. How does it work? Each target in your project is a potential output (using a specific output format, such as <MadCap:variable name="Outputs.DotNetHelp" MadCap:conditions="Products.Analyzer,Products.FlareOnlineOnly,FlareGuides.FlareGettingStartedGuide,FlareGuides.FlarePrintedManual,FlareGuides.FlareConditionTagsGuide" /><MadCap:conditionalText MadCap:conditions="FlareGuides.FlarePrintedOutputGuide">PDF</MadCap:conditionalText> or <MadCap:variable name="Outputs.WebHelp" MadCap:conditions="Products.Analyzer,Products.FlareOnlineOnly,FlareGuides.FlareGettingStartedGuide,FlareGuides.FlarePrintedManual,FlareGuides.FlareConditionTagsGuide" /><MadCap:conditionalText MadCap:conditions="FlareGuides.FlarePrintedOutputGuide">XPS</MadCap:conditionalText>). You can create and apply condition tags to content. Then you associate the condition tags to your different targets as necessary, so that some content appears in some targets but not in other targets. This way, you do not need to create a separate project for each output that you want to produce. If most of the content for your outputs is similar, there is no need to rewrite it in another project. Simply specify which sections to include or exclude in which targets through the use of condition tags. This is one reason that topic-based authoring is so appealing. By placing condition tags on individual topic files themselves, you can pick and choose which topics to include in some outputs and which to include in other outputs.</p>
    </body>
</html>